:mod:`src.server.oasisapi.portfolios.viewsets`
==============================================

.. py:module:: src.server.oasisapi.portfolios.viewsets


Module Contents
---------------

.. py:class:: PortfolioFilter

   Bases: :class:`src.server.oasisapi.filters.TimeStampedFilter`

   .. py:class:: Meta

      .. attribute:: model
         

         

      .. attribute:: fields
         :annotation: = ['name', 'name__contains', 'user']

         


   .. attribute:: name
      

      

   .. attribute:: name__contains
      

      

   .. attribute:: user
      

      


.. py:class:: PortfolioViewSet

   Bases: :class:`rest_framework.viewsets.ModelViewSet`

   list:
   Returns a list of Portfolio objects.

   ### Examples

   To get all portfolios with 'foo' in their name

       /portfolio/?name__contains=foo

   To get all portfolios created on 1970-01-01

       /portfolio/?created__date=1970-01-01

   To get all portfolios updated before 2000-01-01

       /portfolio/?modified__lt=2000-01-01

   retrieve:
   Returns the specific portfolio entry.

   create:
   Creates a portfolio based on the input data

   update:
   Updates the specified portfolio

   partial_update:
   Partially updates the specified portfolio (only provided fields are updated)

   .. attribute:: queryset
      

      

   .. attribute:: serializer_class
      

      

   .. attribute:: filter_class
      

      

   .. method:: get_serializer_class(self)



   .. method:: parser_classes(self)
      :property:



   .. method:: create_analysis(self, request, pk=None, version=None)


      Creates an analysis object from the portfolio.


   .. method:: accounts_file(self, request, pk=None, version=None)


      get:
      Gets the portfolios `accounts_file` contents

      delete:
      Disassociates the portfolios `accounts_file` with the portfolio


   .. method:: set_accounts_file(self, request, pk=None, version=None)


      post:
      Sets the portfolios `accounts_file` contents


   .. method:: location_file(self, request, pk=None, version=None)


      get:
      Gets the portfolios `location_file` contents

      delete:
      Disassociates the portfolios `location_file` contents


   .. method:: set_location_file(self, request, pk=None, version=None)


      post:
      Sets the portfolios `location_file` contents


   .. method:: reinsurance_info_file(self, request, pk=None, version=None)


      get:
      Gets the portfolios `reinsurance_info_file` contents

      delete:
      Disassociates the portfolios `reinsurance_info_file` contents


   .. method:: set_reinsurance_info_file(self, request, pk=None, version=None)


      post:
      Sets the portfolios `reinsurance_info_file` contents


   .. method:: reinsurance_scope_file(self, request, pk=None, version=None)


      get:
      Gets the portfolios `reinsurance_scope_file` contents

      delete:
      Disassociates the portfolios `reinsurance_scope_file` contents


   .. method:: set_reinsurance_scope_file(self, request, pk=None, version=None)


      post:
      Sets the portfolios `reinsurance_scope_file` contents



