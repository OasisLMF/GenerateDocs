:mod:`oasislmf.utils.peril`
===========================

.. py:module:: oasislmf.utils.peril


Module Contents
---------------

.. data:: PERIL_GROUPS
   

   

.. data:: PERILS
   

   

.. data:: DEFAULT_RTREE_INDEX_PROPS
   

   

.. function:: generate_index_entries(items, objects=None)


.. function:: get_peril_areas(areas)


.. function:: get_peril_areas_index(areas=None, peril_areas=None, properties=None)


.. function:: get_rtree_index(items, objects=None, properties=None)


.. py:class:: PerilArea(coords, **kwargs)

   Bases: :class:`shapely.geometry.Polygon`

   .. method:: multipoint(self)
      :property:



   .. method:: coordinates(self)
      :property:



   .. method:: centre(self)
      :property:



   .. method:: coverage_type(self)
      :property:



   .. method:: peril_id(self)
      :property:



   .. method:: id(self)
      :property:




.. py:class:: PerilAreasIndex(*args, **kwargs)

   Bases: :class:`rtree.index.Index`

   .. method:: dumps(self, obj)



   .. method:: loads(self, data)



   .. method:: _get_peril_areas(self, areas)



   .. method:: _generate_index_entries(self, items, objects=None)



   .. method:: protocol(self)
      :property:



   .. method:: peril_areas(self)
      :property:



   .. method:: stream(self)
      :property:



   .. method:: create_from_peril_areas_file(cls, src_fp=None, src_type='csv', peril_id_col='peril_id', coverage_type_col='coverage_type', peril_area_id_col='area_peril_id', non_na_cols=('peril_id', 'coverage_type', 'area_peril_id'), col_dtypes={'peril_id': int, 'coverage_type': int, 'area_peril_id': int}, sort_cols=['area_peril_id'], area_poly_coords_cols={}, area_poly_coords_seq_start_idx=1, area_reg_poly_radius=0.00166, static_props={}, index_fp=None, index_props=copy.deepcopy(DEFAULT_RTREE_INDEX_PROPS))
      :classmethod:



   .. method:: save(self, index_fp, peril_areas=None, index_props=DEFAULT_RTREE_INDEX_PROPS)




