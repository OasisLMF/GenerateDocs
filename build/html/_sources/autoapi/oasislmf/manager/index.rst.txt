:mod:`oasislmf.manager`
=======================

.. py:module:: oasislmf.manager


Module Contents
---------------

.. py:class:: OasisManager(exposure_profile=None, supported_oed_coverage_types=None, accounts_profile=None, fm_aggregation_profile=None, deterministic_analysis_settings=None, ktools_num_processes=None, ktools_fifo_relative=None, ktools_alloc_rule_gul=None, ktools_alloc_rule_il=None, ktools_alloc_rule_ri=None, ktools_debug=None, ktools_error_guard=None, oasis_files_prefixes=None, write_chunksize=None, group_id_cols=None)

   Bases: :class:`object`

   .. method:: exposure_profile(self)
      :property:



   .. method:: supported_oed_coverage_types(self)
      :property:



   .. method:: accounts_profile(self)
      :property:



   .. method:: fm_aggregation_profile(self)
      :property:



   .. method:: deterministic_analysis_settings(self)
      :property:



   .. method:: oasis_files_prefixes(self)
      :property:



   .. method:: write_chunksize(self)
      :property:



   .. method:: group_id_cols(self)
      :property:



   .. method:: ktools_num_processes(self)
      :property:



   .. method:: ktools_fifo_relative(self)
      :property:



   .. method:: ktools_alloc_rule_gul(self)
      :property:



   .. method:: ktools_alloc_rule_il(self)
      :property:



   .. method:: ktools_alloc_rule_ri(self)
      :property:



   .. method:: ktools_debug(self)
      :property:



   .. method:: ktools_error_guard(self)
      :property:



   .. method:: get_alloc_rule(self, alloc_given, alloc_max, err_msg='Invalid alloc rule', fallback=None)



   .. method:: generate_peril_areas_rtree_file_index(self, keys_data_fp, areas_rtree_index_fp, lookup_config_fp=None, lookup_config=None)



   .. method:: generate_keys(self, exposure_fp, lookup_config_fp=None, keys_data_fp=None, model_version_fp=None, lookup_package_fp=None, complex_lookup_config_fp=None, keys_fp=None, keys_errors_fp=None, keys_format=None)



   .. method:: generate_oasis_files(self, target_dir, exposure_fp, exposure_profile=None, exposure_profile_fp=None, keys_fp=None, lookup_config=None, lookup_config_fp=None, keys_data_fp=None, model_version_fp=None, lookup_package_fp=None, complex_lookup_config_fp=None, user_data_dir=None, supported_oed_coverage_types=None, summarise_exposure=None, write_chunksize=None, accounts_fp=None, accounts_profile=None, accounts_profile_fp=None, fm_aggregation_profile=None, fm_aggregation_profile_fp=None, ri_info_fp=None, ri_scope_fp=None, oasis_files_prefixes=None, group_id_cols=None)



   .. method:: generate_model_losses(self, model_run_fp, oasis_fp, analysis_settings_fp, model_data_fp, model_package_fp=None, model_custom_gulcalc=None, ktools_num_processes=None, ktools_fifo_relative=None, ktools_alloc_rule_gul=None, ktools_alloc_rule_il=None, ktools_alloc_rule_ri=None, ktools_error_guard=None, ktools_debug=None, user_data_dir=None)



   .. method:: run_deterministic(self, src_dir, run_dir=None, loss_percentage_of_tiv=1.0, il_alloc_rule=None, ri_alloc_rule=None, net_ri=False)


      Generates insured losses from preexisting Oasis files with a specified
      damage ratio (loss % of TIV).



